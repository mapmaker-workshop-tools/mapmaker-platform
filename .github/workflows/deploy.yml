name: üèó Build and deploy containers to AWS
# Only trigger, when the build workflow succeeded
on:
  push:
    branches: [ "master" ]
permissions:
  contents: read

env:
  AWS_REGION: eu-central-1
  AWS_LIGHTSAIL_SERVICE_NAME: mapmaker 
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true
jobs:
  startnotification:
    name: üí¨ Starting deployment 
    runs-on: ubuntu-latest
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          disable_notification: true
          message: |
            üèóÔ∏è New deployment started - run ${{ github.run_id }}
            Details:
            - By: ${{ github.actor }} 
            - Description: ${{ github.event.commits[0].message }}
            - Code: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            - Build: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  sendnotification:
    name: ‚úÖ Notify success
    needs: [deployimages, validatedeployment, buildnginx, builddjango, startnotification]
    runs-on: ubuntu-latest
    steps:
      - name: send telegram message on push
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ‚úÖ Deployment succesful - run ${{ github.run_id }}
            üåé server is up - we checked!
            Site: https://mapmaker.nl 
            Deployment log: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            

  buildnginx:
    name: üåé building nginx webserver
    needs: [startnotification]
    runs-on: ubuntu-latest
    steps:
      - name: üóÇ  Getting code from Github
        uses: actions/checkout@v2
      - name: ‚öôÔ∏è  Updating to the latest versions
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
      - name: üè¢ Install Amazon Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: ü§ê Log in to AWS Lightsail with Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: üê≥ Create a Docker Container for NGINX
        run: docker build -t nginx:latest -f ./Infrastructure/nginx/Dockerfile .
      - name: üì¨ Upload NGINX image to AWS container register
        run: |
          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
          aws lightsail push-container-image \
            --region ${{ env.AWS_REGION }} \
            --service-name ${service_name} \
            --label nginx \
            --image nginx:latest
      - name: =========== All done. Cleaning up ‚ôªÔ∏è  ===========
        run: ls
      - name: Build Alerts
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üö® Deployment failed üö®
            Build ${{ github.run_id }} failed

            Something went wrong while building the NGINX container the containers to AWS. See the details here:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  builddjango:
      name: ü§† building Django
      needs: [startnotification]
      runs-on: ubuntu-latest
      steps:
        - name: üóÇ  Getting code from Github
          uses: actions/checkout@v2
        - name: ü§ê Make envfile
          uses: SpicyPizza/create-envfile@v1.3
          with:
            envkey_EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER_GMAIL }}
            envkey_EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD_GMAIL }}
            envkey_DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
            envkey_DATABASE_USER: ${{ secrets.DATABASE_USER }}
            envkey_DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
            envkey_DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
            envkey_HCTI_API_KEY: ${{ secrets.HCTI_API_KEY }}
            envkey_HCTI_API_USER_ID: ${{ secrets.HCTI_API_USER_ID }}
            envkey_DEBUG: "True"
            directory: src/core
            file_name: .env
            fail_on_empty: false
        - name: ‚öôÔ∏è  Updating to the latest versions
          run: |
            sudo apt-get update
            sudo apt-get install -y jq unzip
        - name: üè¢ Install Amazon Client
          run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install || true
            aws --version
            curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
            sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
            sudo chmod +x /usr/local/bin/lightsailctl
        - name: ü§ê Log in to AWS Lightsail with Secrets
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-region: ${{ env.AWS_REGION }}
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        - name: Installing dependancies
          run: |
            sudo pip3 install --upgrade pip
            sudo pip3 install -r requirements.txt
        - name: Collecting all static files
          run: |
            ls
            python3 src/manage.py collectstatic --noinput
        - name: üê≥ Create a Docker Container for DJANGO
          run: docker build -t mapmaker:latest .
        - name: üì¨ Upload Backend image to AWS container register
          run: |
            service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
            aws lightsail push-container-image \
              --region ${{ env.AWS_REGION }} \
              --service-name ${service_name} \
              --label mapmaker \
              --image mapmaker:latest
        - name: =========== All done. Cleaning up ‚ôªÔ∏è  ===========
          run: ls
        - name: Build Alerts
          if: ${{ failure() }}
          uses: appleboy/telegram-action@master
          with:
            to: ${{ secrets.TELEGRAM_CHAT }}
            token: ${{ secrets.TELEGRAM_TOKEN }}
            message: |
              üö® Deployment failed üö®
              Build ${{ github.run_id }} failed
              Something went wrong while building the Django container
              
              See the details here:
              ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}


  deployimages:
    name: üöÄ Deploying the containers to AWS Lightsail
    needs: [builddjango, buildnginx]
    runs-on: ubuntu-latest
    steps:
      - name: üóÇ  Getting config files from Github
        uses: actions/checkout@v2
      - name: üè¢ Install Amazon Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: ü§ê Log in to AWS Lightsail with Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: üöÄ Launching the Containers
        run: |
          aws lightsail create-container-service-deployment --service-name ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }} \
          --containers file://Infrastructure/deploymentconfig.json \
          --public-endpoint file://Infrastructure/publicendpoint.json
      - name: =========== All done. Cleaning up ‚ôªÔ∏è  ===========
        run: ls
      - name: Build Alerts
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üö® Deployment failed üö®
            Build ${{ github.run_id }} failed

            Something went wrong while activating the containers to AWS. See the details here:
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  validatedeployment:
    name: ü§® Server up?
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: üóÇ  Getting config files from Github
        uses: actions/checkout@v2
      - name: üè¢ Install Amazon Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl
      - name: ü§ê Log in to AWS Lightsail with Secrets
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: üôãüèª‚Äç‚ôÇÔ∏è Checking current version
        run: aws lightsail get-container-service-deployments --service-name mapmaker --output json
      - name: ‚è± Checking if the container went live
        run: python Infrastructure/AWS/checkdeploymentsuccess.py
      - name: =========== All done. Cleaning up ‚ôªÔ∏è  ===========
        run: ls
      - name: Build Alerts
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üö® Deployment failed üö®
            Build ${{ github.run_id }} failed

            The server did not come online after deploying to AWS. 
            ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  
